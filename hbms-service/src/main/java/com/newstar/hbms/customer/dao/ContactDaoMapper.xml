<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.newstar.hbms.customer.dao.ContactDao">

  <resultMap id="Company" type="com.newstar.hbms.customer.domain.Company" autoMapping="true"/>
  <resultMap id="Contact" type="com.newstar.hbms.customer.domain.Contact" autoMapping="true">
    <id property="id" column="id"/>
    <association property="company" columnPrefix="COM_" resultMap="Company"/>
  </resultMap>

  <insert id="insert" parameterType="com.newstar.hbms.customer.domain.Contact">
    insert into Contact(
      importantLevelId,
      companyId,
      name,
      englishName,
      sexId,
      department,
      position,
      companyPhone,
      mobilePhone,
      companyFax,
      email,
      otherContact,
      birthday,
      remark,
      yn,
      updateUser,
      updateTime,
      createUser,
      createTime
    ) values (
      #{importantLevelId, jdbcType=VARCHAR},
      #{companyId, jdbcType=VARCHAR},
      #{name, jdbcType=VARCHAR},
      #{englishName, jdbcType=VARCHAR},
      #{sexId, jdbcType=VARCHAR},
      #{department, jdbcType=VARCHAR},
      #{position, jdbcType=VARCHAR},
      #{companyPhone, jdbcType=VARCHAR},
      #{mobilePhone, jdbcType=VARCHAR},
      #{companyFax, jdbcType=VARCHAR},
      #{email, jdbcType=VARCHAR},
      #{otherContact, jdbcType=VARCHAR},
      #{birthday, jdbcType=VARCHAR},
      #{remark, jdbcType=VARCHAR},
      1,
      #{updateUser, jdbcType=VARCHAR},
      now(),
      #{createUser, jdbcType=VARCHAR},
      now()
    )
    <selectKey keyProperty="id" resultType="java.lang.Long" order="AFTER">
      select last_insert_id()
    </selectKey>
  </insert>

  <update id="update" parameterType="com.newstar.hbms.customer.domain.Contact">
    update Contact set
      importantLevelId = #{importantLevelId, jdbcType=BIGINT},
      companyId = #{companyId, jdbcType=BIGINT},
      name = #{name, jdbcType=VARCHAR},
      englishName = #{englishName, jdbcType=VARCHAR},
      sexId = #{sexId, jdbcType=BIGINT},
      department = #{department, jdbcType=VARCHAR},
      position = #{position, jdbcType=VARCHAR},
      companyPhone = #{companyPhone, jdbcType=VARCHAR},
      mobilePhone = #{mobilePhone, jdbcType=VARCHAR},
      companyFax = #{companyFax, jdbcType=VARCHAR},
      email = #{email, jdbcType=VARCHAR},
      otherContact = #{otherContact, jdbcType=VARCHAR},
      birthday = #{birthday, jdbcType=DATE},
      remark = #{remark, jdbcType=VARCHAR},
      updateTime = now()
    where
      id = #{id}
  </update>

  <update id="disable">
    update Contact set yn = 0, updateTime = now() where id in
    <foreach collection="array" open="(" close=")" separator="," item="contactId">
      #{contactId}
    </foreach>
  </update>

  <update id="enable">
    update Contact set yn = 1 , updateTime = now() where id in
    <foreach collection="array" open="(" close=")" separator="," item="contactId">
      #{contactId}
    </foreach>
  </update>

  <select id="findByBean" parameterType="com.newstar.hbms.customer.domain.Contact" resultMap="Contact">
    select con.*,com.id as COM_id,com.name as COM_name from Contact con, Company com where con.yn = 1 and com.yn = 1 and con.companyId = com.id
    <if test="id != null">
      and con.id = #{id}
    </if>
    <if test="name != null and !name.isEmpty()">
      and (con.name like "%"#{name}"%" or con.englishName like "%"#{name}"%")
    </if>
    <if test="mobilePhone != null and !mobilePhone.isEmpty()">
      and con.mobilePhone like "%"#{mobilePhone}"%"
    </if>
    <if test="importantLevelId != null">
      and con.importantLevelId = #{importantLevelId}
    </if>
    <if test="companyId != null">
      and con.companyId = #{companyId}
    </if>
    order by com.id, con.createTime desc
  </select>

  <select id="findByIds" parameterType="com.newstar.hbms.customer.domain.Contact"
          resultMap="Contact">
    select con.*,com.id as COM_id,com.name COM_name from Contact con, Company com
    where con.yn = 1 and com.yn = 1 and con.companyId = com.id and con.id in
    <foreach collection="array" open="(" close=")" separator="," item="contactId">
      #{contactId}
    </foreach>
  </select>

</mapper>