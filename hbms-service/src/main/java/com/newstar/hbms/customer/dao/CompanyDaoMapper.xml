<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.newstar.hbms.customer.dao.CompanyDao">

  <insert id="insert" parameterType="com.newstar.hbms.customer.domain.Company">
    insert into Company(
      id,
      companyTypeId,
      name,
      fullName,
      cityId,
      phone,
      webSite,
      address,
      email,
      fax,
      staffCount,
      natureId,
      products,
      registeredCapital,
      legalPerson,
      propertyRightStructureId,
      intro,
      keyword,
      businessDeveloperId,
      folderId,
      remark,
      yn,
      updateUser,
      updateTime,
      createUser,
      createTime
    ) values (
      #{id, jdbcType=VARCHAR},
      #{companyTypeId, jdbcType=BIGINT},
      #{name, jdbcType=VARCHAR},
      #{fullName, jdbcType=VARCHAR},
      #{cityId, jdbcType=BIGINT},
      #{phone, jdbcType=VARCHAR},
      #{webSite, jdbcType=VARCHAR},
      #{address, jdbcType=VARCHAR},
      #{email, jdbcType=VARCHAR},
      #{fax, jdbcType=VARCHAR},
      #{staffCount, jdbcType=INTEGER},
      #{natureId, jdbcType=BIGINT},
      #{products, jdbcType=VARCHAR},
      #{registeredCapital, jdbcType=VARCHAR},
      #{legalPerson, jdbcType=VARCHAR},
      #{propertyRightStructureId, jdbcType=BIGINT},
      #{intro, jdbcType=VARCHAR},
      #{keyword, jdbcType=VARCHAR},
      #{businessDeveloperId, jdbcType=BIGINT},
      #{folderId, jdbcType=BIGINT},
      #{remark, jdbcType=VARCHAR},
      1,
      #{updateUser, jdbcType=VARCHAR},
      now(),
      #{createUser, jdbcType=VARCHAR},
      now()
    )
  </insert>

  <update id="update" parameterType="com.newstar.hbms.customer.domain.Company">
    update Company set
      companyTypeId = #{companyTypeId, jdbcType=BIGINT},
      name = #{name, jdbcType=VARCHAR},
      fullName = #{fullName, jdbcType=VARCHAR},
      cityId = #{cityId, jdbcType=BIGINT},
      phone = #{phone, jdbcType=VARCHAR},
      webSite = #{webSite, jdbcType=VARCHAR},
      address = #{address, jdbcType=VARCHAR},
      email = #{email, jdbcType=VARCHAR},
      fax = #{fax, jdbcType=VARCHAR},
      staffCount = #{staffCount, jdbcType=INTEGER},
      natureId = #{natureId, jdbcType=BIGINT},
      products = #{products, jdbcType=VARCHAR},
      registeredCapital = #{registeredCapital, jdbcType=VARCHAR},
      legalPerson = #{legalPerson, jdbcType=VARCHAR},
      propertyRightStructureId = #{propertyRightStructureId, jdbcType=BIGINT},
      intro = #{intro, jdbcType=VARCHAR},
      keyword = #{keyword, jdbcType=VARCHAR},
      businessDeveloperId = #{businessDeveloperId, jdbcType=BIGINT},
      folderId = #{folderId, jdbcType=BIGINT},
      updateTime = now()
    where
      id = #{id}
  </update>

  <update id="disable">
    update Company set yn = 0, updateTime = now() where id in
    <foreach collection="array" open="(" close=")" separator="," item="companyId">
      #{companyId}
    </foreach>
  </update>

  <update id="enable">
    update Company set yn = 1 , updateTime = now() where id in
    <foreach collection="array" open="(" close=")" separator="," item="companyId">
      #{companyId}
    </foreach>
  </update>
  
  <select id="findByBean" parameterType="com.newstar.hbms.customer.domain.Company"
          resultType="com.newstar.hbms.customer.domain.Company">
    select * from Company c where yn = 1
    <if test="id != null">
      and c.id = #{id}
    </if>
    <if test="name != null and !name.isEmpty()">
      and c.name like "%"#{name}"%"
    </if>
    <if test="phone != null and !phone.isEmpty()">
      and c.phone like "%"#{phone}"%"
    </if>
    order by createTime desc
  </select>

  <select id="findByIds" resultType="com.newstar.hbms.customer.domain.Company">
    select * from Company where id in
    <foreach collection="array" open="(" close=")" separator="," item="companyId">
      #{companyId}
    </foreach>
  </select>

  <select id="findIndustriesByCompanyIds" resultType="com.newstar.hbms.customer.domain.CompanyIndustry">
    select * from CompanyIndustry where companyId in
    <foreach collection="array" open="(" close=")" separator="," item="companyId">
      #{companyId}
    </foreach>
  </select>

</mapper>