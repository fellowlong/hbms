<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.newstar.hbms.customer.dao.PositionDao">

  <resultMap id="Company" type="com.newstar.hbms.customer.domain.Company" autoMapping="true"/>
  <resultMap id="Position" type="com.newstar.hbms.customer.domain.Position">
    <association property="company" columnPrefix="COM_" resultMap="Company"/>
  </resultMap>

  <insert id="insert" parameterType="com.newstar.hbms.customer.domain.Position">
    insert into `Position`(
      id,
      companyId,
      contactId,
      name,
      priorityId,
      industryId,
      functionId,
      cityId,
      fameCompanyBackgroundId,
      nationalityId,
      degreeId,
      languageId,
      minAge,
      maxAge,
      minWorkYears,
      maxWorkYears,
      minAnnualSalary,
      maxAnnualSalary,
      sexId,
      address,
      description,
      brightAndAdvantage,
      processAndLeaderIntro,
      salaryStructure,
      searchDirection,
      businessDeveloperId,
      remark,
      yn,
      updateUser,
      updateTime,
      createUser,
      createTime
    ) values (
      #{id, jdbcType=BIGINT},
      #{companyId, jdbcType=BIGINT},
      #{contactId, jdbcType=BIGINT},
      #{name, jdbcType=VARCHAR},
      #{priorityId, jdbcType=BIGINT},
      #{industryId, jdbcType=BIGINT},
      #{functionId, jdbcType=BIGINT},
      #{cityId, jdbcType=BIGINT},
      #{fameCompanyBackgroundId, jdbcType=BIGINT},
      #{nationalityId, jdbcType=BIGINT},
      #{degreeId, jdbcType=BIGINT},
      #{languageId, jdbcType=BIGINT},
      #{minAge, jdbcType=INTEGER},
      #{maxAge, jdbcType=INTEGER},
      #{minWorkYears, jdbcType=INTEGER},
      #{maxWorkYears, jdbcType=INTEGER},
      #{minAnnualSalary, jdbcType=DOUBLE},
      #{maxAnnualSalary, jdbcType=DOUBLE},
      #{sexId, jdbcType=BIGINT},
      #{address, jdbcType=VARCHAR},
      #{description, jdbcType=VARCHAR},
      #{brightAndAdvantage, jdbcType=VARCHAR},
      #{processAndLeaderIntro, jdbcType=VARCHAR},
      #{salaryStructure, jdbcType=VARCHAR},
      #{searchDirection, jdbcType=VARCHAR},
      #{businessDeveloperId, jdbcType=BIGINT},
      #{remark, jdbcType=VARCHAR},
      1,
      #{updateUser, jdbcType=VARCHAR},
      now(),
      #{createUser, jdbcType=VARCHAR},
      now()
    )
  </insert>

  <update id="update" parameterType="com.newstar.hbms.customer.domain.Position">
    update `Position` set
      companyId = #{companyId, jdbcType=BIGINT},
      contactId = #{contactId, jdbcType=BIGINT},
      name = #{name, jdbcType=VARCHAR},
      priorityId = #{priorityId, jdbcType=BIGINT},
      industryId = #{industryId, jdbcType=BIGINT},
      functionId = #{functionId, jdbcType=BIGINT},
      cityId = #{cityId, jdbcType=BIGINT},
      fameCompanyBackgroundId = #{fameCompanyBackgroundId, jdbcType=BIGINT},
      nationalityId = #{nationalityId, jdbcType=BIGINT},
      degreeId = #{degreeId, jdbcType=BIGINT},
      languageId = #{languageId, jdbcType=BIGINT},
      minAge = #{minAge, jdbcType=INTEGER},
      maxAge = #{maxAge, jdbcType=INTEGER},
      minWorkYears = #{minWorkYears, jdbcType=INTEGER},
      maxWorkYears = #{maxWorkYears, jdbcType=INTEGER},
      minAnnualSalary = #{minAnnualSalary, jdbcType=DOUBLE},
      maxAnnualSalary = #{maxAnnualSalary, jdbcType=DOUBLE},
      sexId = #{sexId, jdbcType=BIGINT},
      address = #{address, jdbcType=VARCHAR},
      description = #{description, jdbcType=VARCHAR},
      brightAndAdvantage = #{brightAndAdvantage, jdbcType=VARCHAR},
      processAndLeaderIntro = #{processAndLeaderIntro, jdbcType=VARCHAR},
      salaryStructure = #{salaryStructure, jdbcType=VARCHAR},
      searchDirection = #{searchDirection, jdbcType=VARCHAR},
      businessDeveloperId = #{businessDeveloperId, jdbcType=BIGINT},
      remark = #{remark, jdbcType=VARCHAR},
      updateTime = now()
    where
      id = #{id}
  </update>

  <update id="disable">
    update Position set yn = 0, updateTime = now() where id in
    <foreach collection="array" open="(" close=")" separator="," item="positionId">
      #{positionId}
    </foreach>
  </update>

  <update id="enable">
    update Position set yn = 1 , updateTime = now() where id in
    <foreach collection="array" open="(" close=")" separator="," item="positionId">
      #{positionId}
    </foreach>
  </update>

  <select id="findByBean" parameterType="com.newstar.hbms.customer.domain.Position"
          resultMap="Position">
    select p.*,com.id as COM_id, com.name COM_name from Position p, Company com where p.yn = 1 and com.yn = 1 and p.companyId = com.id
    <if test="id != null">
      and p.id = #{id}
    </if>
    <if test="name != null and !name.isEmpty()">
      and p.name like "%"#{name}"%"
    </if>
    <if test="minAge != null">
      and p.minAge >= #{minAge}
    </if>
    <if test="maxAge != null">
      and #{maxAge} >= p.maxAge
    </if>
    <if test="sexId != null">
      and p.sexId = #{sexId}
    </if>
    <if test="minWorkYears != null">
      and p.minWorkYears >= #{minWorkYears}
    </if>
    <if test="maxWorkYears != null">
      and #{maxWorkYears} >= p.maxWorkYears
    </if>
    <if test="companyId != null">
      and com.companyId = #{companyId}
    </if>
    <if test="company != null and company.name != null and !company.name.isEmpty()">
      and com.name like "%"#{company.name}"%"
    </if>
    order by com.id, p.createTime desc
  </select>

  <select id="findByIds" resultMap="Position">
    select p.*,com.id as COM_id, com.name COM_name from Position p, Company com where p.yn = 1 and com.yn = 1 and p.companyId = com.id and p.id in
    <foreach collection="array" open="(" close=")" separator="," item="positionId">
      #{positionId}
    </foreach>
  </select>

  <select id="findPositionTagPositionIdIds" resultType="com.newstar.hbms.customer.domain.PositionTag">
    select * from PositionTag pt where pt.positionId in
    <foreach collection="array" open="(" close=")" separator="," item="positionId">
      #{positionId}
    </foreach>
  </select>

</mapper>