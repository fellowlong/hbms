<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.newstar.hbms.project.dao.ProjectDao">

  <resultMap id="Company" type="com.newstar.hbms.customer.domain.Company" autoMapping="true"/>
  <resultMap id="Contact" type="com.newstar.hbms.customer.domain.Contact" autoMapping="true"/>
  <resultMap id="Position" type="com.newstar.hbms.customer.domain.Position" autoMapping="true"/>
  <resultMap id="User" type="com.newstar.hbms.system.domain.User" autoMapping="true"/>
  <resultMap id="Project" type="com.newstar.hbms.project.domain.Project" autoMapping="true">
    <id property="id" column="id"/>
    <association property="company" column="COM_id" columnPrefix="COM_" resultMap="Company"/>
    <association property="contact" columnPrefix="CONTACT_" resultMap="Contact"/>
    <association property="position" columnPrefix="POS_" resultMap="Position"/>
    <association property="manager" columnPrefix="MANAGER_" resultMap="User"/>
  </resultMap>

  <sql id="selectProject">
    select
      project.*,
      company.id as COM_id, company.name COM_name,
      position.id as POS_id, position.name as POS_name,
      contact.id as CONTACT_id, contact.name as CONTACT_name,
      manager.id as MANAGER_id, manager.username as MANAGER_username, manager.realName as MANAGER_realName
    from
      Project project
      left outer join  (select * from Company where yn = 1 ) company on project.companyId = company.id
      left outer join   (select * from Position where yn = 1 ) position on project.positionId = position.id
      left outer join   (select * from Contact where yn = 1 ) contact on project.contactId = contact.id
      left outer join   (select * from User where yn = 1 ) manager on project.managerId = manager.id
  </sql>

  <insert id="insert" parameterType="com.newstar.hbms.project.domain.Project">
    insert into Project(
      code,
      name,
      companyId,
      positionId,
      contactId,
      importantLevelId,
      startDate,
      endDate,
      managerId,
      statusId,
      share,
      remark,
      yn,
      createTime,
      createUser,
      updateTime,
      updateUser
    ) values (
    #{code, jdbcType=VARCHAR},
    #{name, jdbcType=VARCHAR},
    #{companyId, jdbcType=BIGINT},
    #{positionId, jdbcType=BIGINT},
    #{contactId, jdbcType=BIGINT},
    #{importantLevelId, jdbcType=BIGINT},
    #{startDate, jdbcType=DATE},
    #{endDate, jdbcType=DATE},
    #{managerId, jdbcType=BIGINT},
    #{statusId, jdbcType=BIGINT},
    #{share, jdbcType=BOOLEAN},
    #{remark, jdbcType=VARCHAR},
    1,
    #{updateUser, jdbcType=VARCHAR},
    now(),
    #{createUser, jdbcType=VARCHAR},
    now()
    )
    <selectKey resultType="java.lang.Long" keyProperty="id">
      select last_insert_id() as id
    </selectKey>
  </insert>

  <update id="update" parameterType="com.newstar.hbms.project.domain.Project">
    update Project set
      id = #{id, jdbcType=BIGINT},
      code = #{code, jdbcType=VARCHAR},
      name = #{name, jdbcType=VARCHAR},
      companyId = #{companyId, jdbcType=BIGINT},
      positionId = #{positionId, jdbcType=BIGINT},
      contactId = #{contactId, jdbcType=BIGINT},
      importantLevelId = #{importantLevelId, jdbcType=BIGINT},
      startDate = #{startDate, jdbcType=DATE},
      endDate = #{endDate, jdbcType=DATE},
      managerId = #{managerId, jdbcType=BIGINT},
      statusId = #{statusId, jdbcType=BIGINT},
      share = #{share, jdbcType=BOOLEAN},
      remark = #{remark, jdbcType=VARCHAR},
      updateTime = now()
    where
      id = #{id}
  </update>

  <update id="disable">
    update Project set yn = 0, updateTime = now() where id in
    <foreach collection="array" open="(" close=")" separator="," item="projectId">
      #{projectId}
    </foreach>
  </update>

  <update id="enable">
    update Project set yn = 1 , updateTime = now() where id in
    <foreach collection="array" open="(" close=")" separator="," item="projectId">
      #{projectId}
    </foreach>
  </update>

  <select id="findByBean" parameterType="com.newstar.hbms.project.domain.Project"
          resultMap="Project">
    select * from Project project where yn=1
    <if test="id != null">
      and project.id = #{id}
    </if>
    <if test="name != null and !name.isEmpty()">
      and project.name like "%"#{name}"%"
    </if>
    <if test="statusId != null">
      and project.statusId = #{statusId}
    </if>
    <if test="companyId != null">
      and project.companyId = #{companyId}
    </if>
    <if test="positionId != null">
      and project.positionId = #{positionId}
    </if>
    order by project.createTime desc
  </select>

  <select id="findByIds" parameterType="com.newstar.hbms.project.domain.Project"
          resultMap="Project">
    select * from Project project where project.id in
    <foreach collection="array" open="(" close=")" separator="," item="projectId">
      #{projectId}
    </foreach>
  </select>

  <insert id="insertAssistant" parameterType="com.newstar.hbms.project.domain.ProjectAssistant">
    insert into ProjectAssistant(
    id,
    projectId,
    assistantId
    ) values (
    #{id, jdbcType=VARCHAR},
    #{projectId, jdbcType=BIGINT},
    #{assistantId, jdbcType=BIGINT}
    )
  </insert>
  <delete id="cleanAssistants"  parameterType="java.lang.Long">
    delete from ProjectAssistant where projectId = #{value}
  </delete>


  <insert id="insertConsultant" parameterType="com.newstar.hbms.project.domain.ProjectAssistant">
    insert into ProjectConsultant(
    id,
    projectId,
    consultantId
    ) values (
    #{id, jdbcType=VARCHAR},
    #{projectId, jdbcType=BIGINT},
    #{consultantId, jdbcType=BIGINT}
    )
  </insert>
  <delete id="cleanConsultants"  parameterType="java.lang.Long">
    delete from ProjectConsultant where projectId = #{value}
  </delete>

  <select id="findAssistantsByProjectIds" resultType="com.newstar.hbms.project.domain.ProjectAssistant">
    select * from ProjectAssistant where projectId in
    <foreach collection="array" open="(" close=")" separator="," item="projectId">
      #{projectId}
    </foreach>
  </select>

  <select id="findConsultantsByProjectIds" resultType="com.newstar.hbms.project.domain.ProjectConsultant">
    select * from ProjectConsultant where projectId in
    <foreach collection="array" open="(" close=")" separator="," item="projectId">
      #{projectId}
    </foreach>
  </select>

  <insert id="addProjectCandidate">
    insert into ProjectCandidate(
      projectId,
      candidateId,
    statusId,
      createTime,
      createUser,
      updateTime,
      updateUser
    ) values (
      #{projectId},
      #{candidateId},
      #{statusId},
      now(),
      #{createUser, jdbcType=VARCHAR},
      now(),
      #{updateUser, jdbcType=VARCHAR}
    )
    <selectKey resultType="java.lang.Long" keyProperty="id">
      select last_insert_id() as id
    </selectKey>
  </insert>

  <delete id="removeProjectCandidates"  parameterType="java.lang.Long">
    delete from ProjectCandidate where id in
    <foreach collection="array" open="(" close=")" separator="," item="projectCandidateId">
      #{projectCandidateId}
    </foreach>
  </delete>

  <select id="findProjectCandidatesByBean"
          parameterType="com.newstar.hbms.project.domain.ProjectCandidate"
          resultType="com.newstar.hbms.project.domain.ProjectCandidate">
    select * from ProjectCandidate pc where 1=1
    <if test="id != null">
      and pc.id = #{id}
    </if>
    <if test="projectId != null">
      and pc.projectId = #{projectId}
    </if>
    <if test="candidateId != null">
      and pc.candidateId = #{candidateId}
    </if>
    <if test="statusId != null">
      and pc.statusId = #{statusId}
    </if>
    order by pc.updateTime desc
  </select>

</mapper>